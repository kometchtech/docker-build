name: Build and Push Multi-Arch Docker Images

on:
  push:
    paths:
      - '**/Dockerfile'
      - '**/VERSION'
  workflow_dispatch:
    inputs:
      no-cache:
        description: "Build docker images with no cache"
        default: false
        required: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: 
          - linux/amd64 
          - linux/arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # すべての履歴を取得

      - name: Determine previous commit
        id: previous-commit
        run: |
          if [ -z "${{ github.event.before }}" ] || ! git rev-parse ${{ github.event.before }} >/dev/null 2>&1; then
            BEFORE_COMMIT=$(git rev-parse HEAD^ || echo "")
          else
            BEFORE_COMMIT=${{ github.event.before }}
          fi
          echo "before_commit=$BEFORE_COMMIT" >> $GITHUB_ENV

      - name: Find modified directories
        id: find-dirs
        run: |
          if [ -n "$before_commit" ]; then
            CHANGED_DIRS=$(git diff --name-only $before_commit HEAD | grep -E 'Dockerfile|VERSION' | xargs -I {} dirname {} | sort -u | uniq)
            echo "changed_dirs=$CHANGED_DIRS" >> $GITHUB_ENV
          else
            echo "No previous commit found, skipping build."
            echo "changed_dirs=" >> $GITHUB_ENV
          fi

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.changed_dirs }}

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 10

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.3.0
        with:
          image: tonistiigi/binfmt:qemu-v8.1.5
          platforms: ${{ matrix.arch }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Read version from VERSION file
        id: set-version
        run: echo "VERSION=$(cat ${{ matrix.dir }}/VERSION | tr -d ' ')" >> $GITHUB_ENV

      - name: Build and Push by Image
        uses: docker/build-push-action@v6
        with:
          context: ./${{ env.changed_dirs }}
          push: true
          platforms: ${{ matrix.arch }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args:
            VERSION=${{ env.VERSION }}
          no-cache: ${{ inputs.no-cache == true }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.changed_dirs }}:${{ env.VERSION }}-${{ matrix.arch }}

      - name: Save image digest
        id: image_digest
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/${{ env.changed_dirs }}"
          DIGEST=$(docker inspect --format '{{index .RepoDigests 0}}' $IMAGE_NAME:${{ env.VERSION }}-${{ matrix.arch }})
          echo "DIGEST_${{ matrix.arch }}=$DIGEST" >> $GITHUB_ENV
          echo "DIGEST_${{ matrix.arch }}=$DIGEST" >> $GITHUB_OUTPUT

    outputs:
      version: ${{ env.VERSION }}
      archs: ${{ toJson(matrix.arch) }}  # <-- ARCHS を outputs に追加
      changed_dirs: ${{ env.changed_dirs }}

  manifest:
    needs: 
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Load version and archs from previous step
        run: |
          echo "VERSION=${{ needs.build.outputs.version }}" >> $GITHUB_ENV
          echo "ARCHS=${{ needs.build.outputs.archs }}" >> $GITHUB_ENV

      - name: Debug ARCHS
        run: echo "ARCHS=${{ needs.build.outputs.archs }}"

      - name: Load digests from build job
        run: |
          echo "DIGEST_AMD64=${{ needs.build.outputs.DIGEST_linux-amd64 }}" >> $GITHUB_ENV
          echo "DIGEST_ARM64=${{ needs.build.outputs.DIGEST_linux-arm64 }}" >> $GITHUB_ENV

      - name: Create and Push Docker Manifest (Version)
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/${{ matrix.dir }}"
          docker manifest create $IMAGE_NAME:${VERSION} $DIGEST_AMD64 $DIGEST_ARM64
          docker manifest push $IMAGE_NAME:${VERSION}

      - name: Create and Push Docker Manifest (Latest)
        if: github.ref == 'refs/heads/master'
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/${{ matrix.dir }}"
          docker manifest create $IMAGE_NAME:latest $DIGEST_AMD64 $DIGEST_ARM64
          docker manifest push $IMAGE_NAME:latest
