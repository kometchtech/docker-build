name: Build and Push Multi-Arch Docker Images

on:
  push:
    branches:
      - main
    paths:
      - '**/Dockerfile'
      - '**/VERSION'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: 
          - linux/amd64
          - linux/arm64


    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Read version from VERSION file
        id: set-version
        run: echo "VERSION=$(cat ./VERSION | tr -d ' ')" >> $GITHUB_ENV

      - name: Build and Push Image for ${{ matrix.arch }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: ${{ matrix.arch }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/your-image-name:${{ env.VERSION }}-${{ matrix.arch }}

  manifest:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Read version from VERSION file
        id: set-version
        run: echo "VERSION=$(cat ./VERSION | tr -d ' ')" >> $GITHUB_ENV

      - name: Create Docker Manifest List
        run: |
          ARCHS="linux/amd64 linux/arm64"  # 必要なアーキテクチャを列挙（将来追加可）
          IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/your-image-name"
          
          # `--amend` を動的に構築
          AMEND_ARGS=""
          for ARCH in $ARCHS; do
            AMEND_ARGS="$AMEND_ARGS --amend $IMAGE_NAME:${VERSION}-$ARCH"
          done

          # マルチアーキテクチャの Docker イメージを作成・プッシュ
          docker manifest create $IMAGE_NAME:${VERSION} $AMEND_ARGS
          docker manifest push $IMAGE_NAME:${VERSION}

      - name: Create and Push Docker Manifest (Latest)
        if: github.ref == 'refs/heads/main'
        run: |
          ARCHS="linux/amd64 linux/arm64"
          IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/your-image-name"

          AMEND_ARGS=""
          for ARCH in $ARCHS; do
            AMEND_ARGS="$AMEND_ARGS --amend $IMAGE_NAME:${VERSION}-$ARCH"
          done

          docker manifest create $IMAGE_NAME:latest $AMEND_ARGS
          docker manifest push $IMAGE_NAME:latest

