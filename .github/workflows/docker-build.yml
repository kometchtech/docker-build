name: Build and Push Multi-Arch Docker Images

on:
  push:
    paths:
      - '**/Dockerfile'
      - '**/VERSION'
  workflow_dispatch:
    inputs:
      no-cache:
        description: "Build docker images with no cache"
        default: false
        required: false
        type: boolean

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
          - linux/arm/v7
          - linux/arm/v5

    steps:
      - name: Checkout repository with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 全コミットを取得

      - name: Ensure latest commit is checked out
        run: git checkout ${{ github.sha }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Enable swap space (prevent memory issues)
        run: |
          sudo fallocate -l 4G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Determine previous commit
        id: previous-commit
        run: |
          if [ -z "${{ github.event.before }}" ] || ! git rev-parse ${{ github.event.before }} >/dev/null 2>&1; then
            BEFORE_COMMIT=$(git rev-parse HEAD^ || echo "")
          else
            BEFORE_COMMIT=${{ github.event.before }}
          fi
          echo "before_commit=$BEFORE_COMMIT" >> $GITHUB_ENV

      - name: Find modified directories
        id: find-dirs
        run: |
          if [ -n "$before_commit" ]; then
            CHANGED_DIRS=$(git diff --name-only $before_commit HEAD | grep -E 'Dockerfile|VERSION' | xargs -I {} dirname {} | sort -u | uniq)
            echo "changed_dirs=$CHANGED_DIRS" >> $GITHUB_ENV
          else
            echo "No previous commit found, skipping build."
            echo "changed_dirs=" >> $GITHUB_ENV
          fi

 #     - name: Set VERSION environment variable
 #       id: set-version
 #       run: |
 #         for dir in ${{ env.changed_dirs }}; do
 #           if [ -f "$dir/VERSION" ]; then
 #             RELEASE_VERSION=$(cat $dir/VERSION | tr -d ' ')  # VERSIONファイルからバージョンを取得
 #             echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV  # 環境変数にセット
 #             echo "Version set to: $RELEASE_VERSION"
 #           else
 #             echo "No VERSION file found in $dir, skipping..."
 #           fi
 #         done

      - name: Build and Push Multi-Arch Docker Images
        if: env.changed_dirs != ''
        run: |
          for dir in ${{ env.changed_dirs }}; do
            if [ -f "$dir/VERSION" ]; then
              TAG=$(cat $dir/VERSION | tr -d ' ')  # 余計なスペースや改行を削除
              if [ -z "$TAG" ]; then
                echo "Error: VERSION file is empty in $dir, skipping..."
                continue
              fi
      
              IMAGE_NAME="kometchtech/${dir//\//-}"  # "/" を "-" に置換
              FULL_TAG="$IMAGE_NAME:$TAG"
      
              echo "Building and pushing $FULL_TAG for amd64 and arm64"
      
              docker buildx build --platform ${{ matrix.platform }} \
                --push \
                --no-cache \
                --build-arg VERSION=$TAG \
                -t $FULL_TAG $dir
            else
              echo "Error: VERSION file not found in $dir, skipping..."
            fi
          done
