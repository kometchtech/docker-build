name: Build and Push Multi-Arch Docker Images

on:
  push:
    branches:
      - main
    paths:
      - '**/Dockerfile'
      - '**/VERSION'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Enable swap space (prevent memory issues)
        run: |
          sudo fallocate -l 4G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu make

      - name: Identify changed directories
        id: changes
        run: |
          CHANGED_DIRS=$(git diff --name-only HEAD^ HEAD | grep -E 'Dockerfile|VERSION' | xargs -I {} dirname {} | sort -u)
          echo "changed_dirs=$CHANGED_DIRS" >> $GITHUB_ENV
          echo "Changed directories: $CHANGED_DIRS"

      - name: Build and Push Docker Images
        if: env.changed_dirs != ''
        run: |
          for dir in ${{ env.changed_dirs }}; do
            if [ -f "$dir/VERSION" ]; then
              TAG=$(cat $dir/VERSION | tr -d ' ')  # 余計なスペースや改行を削除
              if [ -z "$TAG" ]; then
                echo "Error: VERSION file is empty in $dir, skipping..."
                continue
              fi

              IMAGE_NAME="kometchtech/${dir//\//-}"
              FULL_TAG="$IMAGE_NAME:$TAG"

              echo "Building and pushing $FULL_TAG for amd64 and arm64"

              docker buildx build --platform linux/amd64,linux/arm64 \
                --push \
                --no-cache \
                --build-arg VERSION=$TAG \
                -t $FULL_TAG $dir
            else
              echo "Error: VERSION file not found in $dir, skipping..."
            fi
          done
